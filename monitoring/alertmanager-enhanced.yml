# Enhanced Alertmanager Configuration for Virtual Queue Management System
global:
  smtp_smarthost: '${SMTP_SERVER:-localhost:587}'
  smtp_from: '${ALERT_FROM_EMAIL:-alerts@virtualqueue.com}'
  smtp_auth_username: '${SMTP_USERNAME:-alerts@virtualqueue.com}'
  smtp_auth_password: '${SMTP_PASSWORD}'
  smtp_require_tls: true
  slack_api_url: '${SLACK_WEBHOOK_URL}'

# Templates for alert formatting
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Routing tree
route:
  group_by: ['alertname', 'service', 'severity']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'default-receiver'
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 5s
      group_interval: 5s
      repeat_interval: 30m
      routes:
        # Security critical alerts
        - match:
            service: security
          receiver: 'security-critical'
          group_wait: 0s
          repeat_interval: 15m
        # Infrastructure critical alerts
        - match:
            service: api
          receiver: 'platform-critical'
          group_wait: 0s
          repeat_interval: 15m
        # Database critical alerts
        - match:
            service: database
          receiver: 'platform-critical'
          group_wait: 0s
          repeat_interval: 15m

    # Warning alerts - delayed notification
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      group_interval: 30s
      repeat_interval: 2h

    # Info alerts - summary notification
    - match:
        severity: info
      receiver: 'info-alerts'
      group_wait: 5m
      group_interval: 1h
      repeat_interval: 6h

    # Business alerts - business hours only
    - match:
        team: business
      receiver: 'business-alerts'
      group_wait: 1m
      group_interval: 5m
      repeat_interval: 4h
      active_time_intervals:
        - business_hours

    # Security alerts - always immediate
    - match:
        team: security
      receiver: 'security-alerts'
      group_wait: 0s
      group_interval: 0s
      repeat_interval: 30m

# Inhibition rules to prevent alert storms
inhibit_rules:
  # Inhibit warning alerts when critical alerts are firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']

  # Inhibit individual service alerts when the entire service is down
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: '.*Service.*'
    equal: ['service']

  # Inhibit individual endpoint alerts when the API is down
  - source_match:
      alertname: 'VirtualQueueAPIDown'
    target_match_re:
      alertname: '.*API.*'
    equal: ['service']

# Receivers
receivers:
  # Default receiver for unmatched alerts
  - name: 'default-receiver'
    email_configs:
      - to: '${DEFAULT_ALERT_EMAIL:-admin@virtualqueue.com}'
        subject: 'Virtual Queue Alert: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          {{ end }}

  # Critical alerts receiver
  - name: 'critical-alerts'
    email_configs:
      - to: '${CRITICAL_ALERT_EMAIL:-critical@virtualqueue.com}'
        subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          üö® CRITICAL ALERT üö®
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts-critical'
        title: 'üö® CRITICAL ALERT'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        send_resolved: true

  # Security critical alerts receiver
  - name: 'security-critical'
    email_configs:
      - to: '${SECURITY_ALERT_EMAIL:-security@virtualqueue.com}'
        subject: 'üîí SECURITY CRITICAL: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          üîí SECURITY CRITICAL ALERT üîí
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          IMMEDIATE ACTION REQUIRED
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#security-alerts'
        title: 'üîí SECURITY CRITICAL'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        send_resolved: true
    webhook_configs:
      - url: '${SECURITY_WEBHOOK_URL}'
        send_resolved: true

  # Platform critical alerts receiver
  - name: 'platform-critical'
    email_configs:
      - to: '${PLATFORM_ALERT_EMAIL:-platform@virtualqueue.com}'
        subject: '‚öôÔ∏è PLATFORM CRITICAL: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          ‚öôÔ∏è PLATFORM CRITICAL ALERT ‚öôÔ∏è
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#platform-alerts'
        title: '‚öôÔ∏è PLATFORM CRITICAL'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        send_resolved: true

  # Warning alerts receiver
  - name: 'warning-alerts'
    email_configs:
      - to: '${WARNING_ALERT_EMAIL:-ops@virtualqueue.com}'
        subject: '‚ö†Ô∏è WARNING: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          ‚ö†Ô∏è WARNING ALERT ‚ö†Ô∏è
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts-warning'
        title: '‚ö†Ô∏è WARNING'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        send_resolved: true

  # Info alerts receiver
  - name: 'info-alerts'
    email_configs:
      - to: '${INFO_ALERT_EMAIL:-info@virtualqueue.com}'
        subject: '‚ÑπÔ∏è INFO: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          ‚ÑπÔ∏è INFO ALERT ‚ÑπÔ∏è
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  # Business alerts receiver
  - name: 'business-alerts'
    email_configs:
      - to: '${BUSINESS_ALERT_EMAIL:-business@virtualqueue.com}'
        subject: 'üìä BUSINESS: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          üìä BUSINESS ALERT üìä
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#business-alerts'
        title: 'üìä BUSINESS ALERT'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        send_resolved: true

  # Security alerts receiver
  - name: 'security-alerts'
    email_configs:
      - to: '${SECURITY_ALERT_EMAIL:-security@virtualqueue.com}'
        subject: 'üîí SECURITY: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          üîí SECURITY ALERT üîí
          
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#security-alerts'
        title: 'üîí SECURITY ALERT'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        send_resolved: true

# Time intervals for business hours
time_intervals:
  - name: 'business_hours'
    time_intervals:
      - times:
          - start_time: '09:00'
            end_time: '17:00'
        weekdays: ['monday:friday']
        months: ['january:december']
        years: ['2024:2030']
